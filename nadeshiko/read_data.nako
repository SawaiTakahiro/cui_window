/*
	2016/02/02
	振り返りスクリプトのリメイク。
	いろいろ使ってやり直してみる
*/

＃メモ
＃なでしこでのハッシュの書き方
＃http://nadesi.com/doc/reference/syntax/1-4-array.htm

＃データの中身（ソースファイルの中身）
！日付						= 0
！場所						= 1
！レース					= 2
！クラス					= 3
！芝ダート					= 4
！距離						= 5
！馬番						= 6
！馬名						= 7
！タイム型マイニング予測値	= 8
！タイム型予測順位			= 9
！対戦型マイニング予測値	= 10
！対戦型予測順位			= 11
！確定順位					= 12
！人気						= 13
！単勝配当					= 14


＃作業用の仮データ
＃実際にはクリップボードのを読んだり、適当に出力したCSVを使うかも
ソースファイルは、「sample_data.csv」

CSVデータは、ソースファイルを読む。



/*
振り返りで使っているほうのデータ
こっちも一度に処理できるように付け加える

0	2016/1/31	＠日付
1	東京		＠場所
2	未勝利		＠クラス
3	1			＠レース番号
4	未勝利・牝	＠レース名
5	ダ			＠区分
6	1400		＠距離
7	5			＠馬番
8	 ストライクショット	＠馬名
9	1			＠人気
10	170			＠払戻金額
11	1			＠着順
12	87.28		＠タイム型予測値
13	1			＠タイム型順位
14	75			＠対戦型予測値
15	1			＠対戦型予測値

//*/


＃なでしこだと、CSVを二次元配列で取得できる機能がある
開催データは、CSVデータを表CSV変換。

/*
メモ：
	最悪の場合、元の生成するスクリプトはそのままにして
	このスクリプトで「必要になるCSVファイルを用意するだけ」にしちゃう
	
	今、実際の運用だと２つファイルを出力して別々に加工しているのを、
	１つのファイルを出力して実行するだけで処理できるようにする
//*/

＃グラフを作るときに、取り出したい項目
グラフ用リストとは配列。
グラフ用リストに日付を配列追加。
グラフ用リストに場所を配列追加。
グラフ用リストにレースを配列追加。
グラフ用リストにクラスを配列追加。
グラフ用リストに芝ダートを配列追加。
グラフ用リストに距離を配列追加。
グラフ用リストに馬番を配列追加。
グラフ用リストに馬名を配列追加。
グラフ用リストにタイム型マイニング予測値を配列追加。
グラフ用リストにタイム型予測順位を配列追加。
グラフ用リストに対戦型マイニング予測値を配列追加。
グラフ用リストに対戦型予測順位を配列追加。
グラフ用リストに確定順位を配列追加。

＃グラフを作成するためのデータを用意する
グラフ用データとは配列。
グラフ用データは、CSVデータ取得（開催データ、グラフ用リスト）

＃グラフを作るときに、取り出したい項目
振り返り用リストとは配列。

振り返り用リストに日付を配列追加。
振り返り用リストに場所を配列追加。
振り返り用リストにクラスを配列追加。
振り返り用リストにレースを配列追加。
振り返り用リストに場所を配列追加。＃レース名が必要だった。ダミー
振り返り用リストに芝ダートを配列追加。
振り返り用リストに距離を配列追加。
振り返り用リストに馬番を配列追加。
振り返り用リストに馬名を配列追加。
振り返り用リストに人気を配列追加。
振り返り用リストに単勝配当を配列追加。
振り返り用リストに確定順位を配列追加。
振り返り用リストにタイム型マイニング予測値を配列追加。
振り返り用リストにタイム型予測順位を配列追加。
振り返り用リストに対戦型マイニング予測値を配列追加。
振り返り用リストに対戦型予測順位を配列追加。


＃グラフを作成するためのデータを用意する
振り返り用データとは配列。
振り返り用データは、CSVデータ取得（開催データ、振り返り用リスト）


＃グラフを作成して保存する
＃保存する場所なんかは仮
！「draw_graph.nako」を取り込む
グラフ作成（グラフ用データ） 

終わる。

●列データ取得（データ、カラム番号）
	データのカラム番号を表列取得で戻る。

●CSVデータ取得（データ、カラムリスト）
	出力用とは配列。
	
	カラムリストを反復
		位置は、出力用の表列数
	    出力用は、出力用の位置に列データ取得（データ、対象）を表列挿入。
	    
    出力用で戻る。
