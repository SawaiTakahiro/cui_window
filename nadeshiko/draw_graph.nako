/*--------------------------------------------------
	マイニング成績のグラフ作成
	2014/11/03
	
	2014/11/09　☆１のタブをcsv出力する
	2016/02/05	振り返り記事とまとめて生成できるように変更
--------------------------------------------------*/

●グラフ作成（データテーブル）    
    ＃母艦の設定
    
    母艦の可視はオフ。
    母艦のＷは、820。
    母艦のＨは、480。
    母艦の可視はオン。
    
    ＃その他定数
    ！予想数上限 = 17
    
    保存用パスは「」。
    
    
    /*--------------------------------------------------
    データの読み込み部分
    
    Targetから出力したCSVファイルを読み込み、配列にする。
    形式はCSVで。
    --------------------------------------------------*/
    ＃データテーブルはグラフ用データ。
    
    /*--------------------------------------------------
    成績の集計をする部分
    
    CSVを読み込んだ配列から、各マイニング順位と着順をまとめる
    --------------------------------------------------*/
    ＃フルゲートである、１８×１８で初期化をする
    初期化用配列とは配列。
    初期化用配列は、「0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
    0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
    0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
    0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
    0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
    0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
    0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
    0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
    0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
    0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
    0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
    0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
    0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
    0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
    0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
    0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
    0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
    0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0」
    
    ＃どちらも縦が予測順位、横が確定順位といった表にする
    タイム型結果とは配列。
    タイム型結果は、初期化用配列。
    
    対戦型結果とは配列。
    対戦型結果は、初期化用配列。
    
    
    データテーブルを反復
		＃確定順位が数字（中止、取り消しでない）ものだけ集計する
		対象[確定順位]が数字か判定
		もし、そうならば
			順位は、対象[確定順位]を半角変換。＃データが一けた台だった場合は全角でいれられているため
			
			＃確定順位が数字の場合
			タイム型結果[対象[タイム型予測順位]-1][順位-1] = 1 + タイム型結果[対象[タイム型予測順位]-1][順位-1]
			
			＃障害戦などで空白の場合がある。空白の場合は省く
			もし、対象[対戦型予測順位]<>""ならば
				対戦型結果[対象[対戦型予測順位]-1][順位-1] = 1 + 対戦型結果[対象[対戦型予測順位]-1][順位-1]
		違えば
			＃確定順位が数字でない→中止などだった場合
			＃何もしない
    
    レース数は、タイム型結果[0]の配列合計。
    
    /*--------------------------------------------------
    グラフの描画をする部分
    
    タイム型、対戦型の共通部分
    --------------------------------------------------*/
    ＃グラフ部分の設定
    グラフ幅 = 20
    グラフ高さ = 15。
    
    基準点＿横 = 70
    基準点＿縦 = 44
    オフセット横 = 10
    オフセット縦 = 5
    
    色＿１着は、RGB($e5, $5b, $5b)
    色＿２着は、RGB($e5, $a0, $5b)
    色＿３着は、RGB($a0, $e5, $5b)
    色＿背景は、RGB($F9, $F9, $F9)
    
    /*--------------------------------------------------
    タイム型のグラフを描画、保存する
    --------------------------------------------------*/
    ＃画面を背景色で上書き
    母艦を色＿背景で画面クリア。
    
    ＃画像のタイトルを描画をする
    グラフタイトルは、「タイム型データマイニング予測振り返り{データテーブル[0][日付]の文字列UNIXファイル名変換}」
    母艦の10,5へグラフタイトルを文字描画。
    
    軸描画。
    凡例描画。
    
    ＃予測順位分繰り返す
    iで0から予想数上限まで繰り返す	
		＃バーの長さ基準
		勝ち数	= タイム型結果[i][0]
		連数	= タイム型結果[i][0] + タイム型結果[i][1]
		複勝数	= タイム型結果[i][0] + タイム型結果[i][1] + タイム型結果[i][2]
		
		グラフ描画（i）
    
    ＃グラフを画像で保存する	
    グラフ保存。
    
    
    /*--------------------------------------------------
    対戦型のグラフを描画、保存する
    --------------------------------------------------*/
    ＃画面を背景色で上書き
    母艦を色＿背景で画面クリア。
    
    ＃画像のタイトルを描画をする
    グラフタイトルは、「対戦型データマイニング予測振り返り{データテーブル[0][日付]の文字列UNIXファイル名変換}」
    母艦の10,5へグラフタイトルを文字描画。
    
    軸描画。
    凡例描画。
    
    ＃予測順位分繰り返す
    iで0から予想数上限まで繰り返す	
		＃バーの長さ基準
		勝ち数	= 対戦型結果[i][0]
		連数	= 対戦型結果[i][0] + 対戦型結果[i][1]
		複勝数	= 対戦型結果[i][0] + 対戦型結果[i][1] + 対戦型結果[i][2]
		
		グラフ描画（i）
    
    ＃グラフを画像で保存する	
    グラフ保存。
    
●グラフ保存
	母艦を「{保存用パス}{グラフタイトル}.jpg」に画像保存。

●グラフ描画（i）
	縦位置 = ゲット縦位置（i）
	横位置 = 基準点＿横
	
	＃グラフのバーは枠無し
	線スタイルは「透明」

	＃グラフ自体の描画を行う
	＃重ねて描画するため、３着から描く
	塗り色は色＿３着。
	四角（横位置, 縦位置,複勝数 * グラフ幅 + 横位置, グラフ高さ + 縦位置）
	
	塗り色は色＿２着。
	四角（横位置, 縦位置,連数 * グラフ幅 + 横位置, グラフ高さ + 縦位置）
	
	塗り色は色＿１着。
	四角（横位置, 縦位置,勝ち数 * グラフ幅 + 横位置, グラフ高さ + 縦位置）


＃縦の描画位置を求める（返す）
●ゲット縦位置（i）
	基準点＿縦 + （グラフ高さ + オフセット縦）* iで戻る。

＃軸の描画をする
●軸描画
	＃横軸
	iで0からレース数-1まで繰り返す
		母艦の（基準点＿横 + 3 + i * グラフ幅）,25へ「{i + 1}」を文字描画。＃グラフの軸
	
	＃縦軸
	iで0から予想数上限まで繰り返す
		母艦の10,ゲット縦位置（i）へ「予測{i + 1}位」を文字描画。＃グラフの軸
	
	
	iで1から7まで繰り返す
		ガイド描画（i * 5）。	
	
●ガイド描画（i）
	＃グラフのガイドラインを引く
	線スタイルは「実線」
	線太さは1。
	線色はRGB($99, $99, $99)
	基準点＿横-1 + グラフ幅 * i, 40から基準点＿横-1 + グラフ幅 * i, 398へ線。
		

＃凡例の描画をする
●凡例描画
	＃凡例も枠無し
	線スタイルは「透明」
	
	凡例＿縦 = 410。
	母艦の10,凡例＿縦へ「凡例：」を文字描画。
    
    凡例＿横 = 85。
    母艦の凡例＿横 - 35,凡例＿縦へ「１着」を文字描画。
    塗り色は色＿１着。
    四角（凡例＿横, 凡例＿縦,凡例＿横 + グラフ幅 * 2, 凡例＿縦 + グラフ高さ）
    
    凡例＿横 = 170。
    母艦の凡例＿横 - 35,凡例＿縦へ「２着」を文字描画。
    塗り色は色＿２着。
    四角（凡例＿横, 凡例＿縦,凡例＿横 + グラフ幅 * 2, 凡例＿縦 + グラフ高さ）
    
    凡例＿横 = 255。
    母艦の凡例＿横 - 35,凡例＿縦へ「３着」を文字描画。
    塗り色は色＿３着。
    四角（凡例＿横, 凡例＿縦,凡例＿横 + グラフ幅 * 2, 凡例＿縦 + グラフ高さ）
	
